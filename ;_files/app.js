// Generated by CoffeeScript 1.12.6
(function() {
  var NoLight;

  NoLight = {
    hasSubmittedForm: false,
    translations: {
      empty_html: 'You need to enter HTML to be able to submit.',
      confirm: 'Are you sure you want to submit your code?\n\nYou will not be able to come back to it.',
      leave: 'Are you sure you want to leave the page? All your code will be lost!'
    }
  };

  NoLight.init = function() {
    var chars_count, editor, header, lines_count, screen_height, screen_width, submission_html, submit_button;
    header = $('header');
    editor = $('#editor');
    submission_html = $('#submission_html');
    submit_button = $('#submit');
    chars_count = $('#count #characters em');
    lines_count = $('#count #lines em');
    screen_width = $(window).width();
    screen_height = $(window).height();
    submission_html.focus();
    header.width(screen_width);
    editor.width(screen_width - 50).height(screen_height - 180);
    if (typeof tabIndent === 'object') {
      tabIndent.render(submission_html[0]);
    } else {
      submission_html.keydown(function(e) {
        if (e.keyCode === 9) {
          return e.preventDefault();
        }
      });
    }
    $('#count').click(function() {
      return $(this).toggleClass('hide');
    });
    submission_html.keyup(function(e) {
      chars_count.text(submission_html.val().length);
      return lines_count.text((submission_html.val().match(/\n/g) || []).length + 1);
    });
    editor.submit(function(e) {
      var submission_html_trimmed;
      e.preventDefault();
      e.stopImmediatePropagation();
      submission_html_trimmed = $.trim($('#submission_html').val());
      if (submission_html_trimmed.length === 0) {
        return alert(NoLight.translations['empty_html']);
      }
      return NoLight.confirmAndPrompt().then(function() {
        submit_button.addClass('progress');
        NoLight.hasSubmittedForm = true;
        return setTimeout((function() {
          return editor.unbind().find('#submit').click();
        }), 1);
      }, NoLight.setToOriginalState);
    });
    return NoLight.addUnloadListener();
  };

  NoLight.setToOriginalState = function() {
    $('#submit').removeClass('progress');
    return $('#submission_html').focus();
  };

  NoLight.addUnloadListener = function() {
    return window.addEventListener('beforeunload', function(e) {
      return NoLight.attemptToLeavePage().then(function() {
        var confirmation_message, event;
        event = e || window.event;
        confirmation_message = NoLight.translations['leave'];
        (e || window.event).returnValue = confirmation_message;
        return confirmation_message;
      });
    });
  };

  NoLight.confirmAndPrompt = function() {
    return new Promise(function(resolve, reject) {
      var confirm_dialog;
      confirm_dialog = confirm(NoLight.translations['confirm']);
      if (confirm_dialog) {
        return resolve();
      } else {
        return reject();
      }
    });
  };

  NoLight.attemptToLeavePage = function() {
    return new Promise(function(resolve, reject) {
      var body_editor_exists, not_submitted_form, submission_html_valid;
      not_submitted_form = !NoLight.hasSubmittedForm;
      submission_html_valid = $('#submission_html').val().length > 0;
      body_editor_exists = $('body.editor').length > 0;
      if (not_submitted_form && submission_html_valid && body_editor_exists) {
        return resolve();
      } else {
        return reject();
      }
    });
  };

  $(document).ready(function() {
    return NoLight.init();
  });

}).call(this);
